name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Test job - runs on all platforms
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Check formatting
        run: dart format --set-exit-if-changed lib test

  # Linux build
  build-linux:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang cmake ninja-build pkg-config \
            libgtk-3-dev libblkid-dev liblzma-dev \
            libglib2.0-dev libgio2.0-cil

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'

      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Build example app
        working-directory: example
        run: |
          flutter pub get
          flutter build linux --release

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: example/build/linux/x64/release/bundle/

  # Windows build
  build-windows:
    runs-on: windows-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Build example app
        working-directory: example
        run: |
          flutter pub get
          flutter build windows --release

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: example/build/windows/x64/runner/Release/

  # macOS build
  build-macos:
    runs-on: macos-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'

      - name: Enable macOS desktop
        run: flutter config --enable-macos-desktop

      - name: Build example app
        working-directory: example
        run: |
          flutter pub get
          flutter build macos --release

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: example/build/macos/Build/Products/Release/

  # Docker Linux build
  docker-linux:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Linux in Docker
        run: |
          chmod +x docker/build.sh
          ./docker/build.sh linux build

      - name: Upload Docker Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docker-linux-build
          path: build-output/linux/

  # Flatpak build
  build-flatpak:
    runs-on: ubuntu-latest
    needs: test
    container:
      image: fedora:latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Flatpak tools
        run: |
          dnf install -y flatpak flatpak-builder git

      - name: Setup Flathub
        run: |
          flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
          flatpak install -y flathub org.freedesktop.Platform//23.08 org.freedesktop.Sdk//23.08

      - name: Build Flatpak
        working-directory: example/linux/flatpak
        run: |
          flatpak-builder --force-clean build-dir com.example.EnteDirectoryPicker.yaml

  # Release job - creates release with all artifacts
  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create release packages
        run: |
          cd linux-build && tar czf ../ente-directory-picker-linux.tar.gz * && cd ..
          cd windows-build && zip -r ../ente-directory-picker-windows.zip * && cd ..
          cd macos-build && zip -r ../ente-directory-picker-macos.zip * && cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ente-directory-picker-linux.tar.gz
            ente-directory-picker-windows.zip
            ente-directory-picker-macos.zip
          draft: true
          prerelease: false